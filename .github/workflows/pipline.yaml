jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: dotnet build
  
  test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: dotnet test -p:CollectCoverage=true -p:CoverletOutputFormat=opencover -l trx

  analyze:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN}}
    needs:
      - build
      - test
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: dotnet tool install --global dotnet-sonarscanner
      - run: |
          dotnet sonarscanner begin -k:'project_clerktracker' -o:'MatthewTheroux' -d:sonar.host.url='https://sonarcloud.io' -d:sonar.login=$SONAR_TOKEN -d:sonar.cs.opencover.reportsPaths='./test_coverage/*.xml' -d:sonar.cs.vstest.reportsPaths='./test_result/*.trx'
          dotnet build
          dotnet sonarscanner end -d:sonar.login=$SONAR_TOKEN


name: ci-pipeline
on: push